name: Azure Web App Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 22.x
      uses: actions/setup-node@v3
      with:
        node-version: '22.x'
        cache: 'npm'
        cache-dependency-path: 'server/package-lock.json'
    
    - name: Install Server Dependencies
      working-directory: ./server
      run: npm ci --production
    
    - name: Install Client Dependencies
      working-directory: ./client
      run: npm ci --production

    - name: Prepare Deployment Package
      run: |
        mkdir -p deployment/server
        mkdir -p deployment/client
        mkdir -p deployment/data
        
        # Copy server files
        cp -r server/node_modules deployment/server/
        cp server/*.js deployment/server/
        cp server/package.json deployment/server/
        
        # Copy data directory (if it exists)
        cp -r server/data deployment/server/ || mkdir -p deployment/server/data
        
        # Copy client files
        cp -r client/* deployment/client/
        
        # Create environment file
        echo "PORT=8080" > deployment/.env
        echo "NODE_ENV=production" >> deployment/.env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET || 'fallback-secret-for-testing' }}" >> deployment/.env
        echo "WEBSITE_NODE_DEFAULT_VERSION=22.x" >> deployment/.env
    
    - name: Create web.config for Azure
      run: |
        cat > deployment/web.config << 'EOL'
        <?xml version="1.0" encoding="utf-8"?>
        <configuration>
          <system.webServer>
            <handlers>
              <add name="iisnode" path="server/start.js" verb="*" modules="iisnode"/>
            </handlers>
            <rewrite>
              <rules>
                <rule name="StaticContent">
                  <match url="(.*)" />
                  <action type="Rewrite" url="client/{R:1}"/>
                </rule>
                <rule name="NodeServer">
                  <match url=".*" />
                  <conditions>
                    <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
                    <add input="{REQUEST_URI}" pattern="^/api" />
                  </conditions>
                  <action type="Rewrite" url="server/start.js"/>
                </rule>
              </rules>
            </rewrite>
          </system.webServer>
        </configuration>
        EOL
    
    - name: Create Deployment Package
      run: |
        cd deployment
        zip -r ../release.zip .
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: release.zip
        retention-days: 5

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: 
      name: Production
      url: https://caa-cf-review.azurewebsites.net
    
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: app-release
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'caa-cf-review'
        slot-name: 'Production'
        publish-profile: ${{ secrets.AZUREWEBSITES_PUBLISH_PROFILE }}
        package: release.zip

    - name: Post-Deployment Verification
      run: |
        echo "Waiting for deployment..."
        sleep 30
        curl -f https://caa-cf-review.azurewebsites.net/health || {
          echo "Health check failed. Deployment may have issues."
          exit 1
        }

    - name: Verify Deployment Logs
      run: |
        curl -f https://caa-cf-review.azurewebsites.net/api/test || {
          echo "API test failed. Potential issues with the API layer."
          exit 1
        }
