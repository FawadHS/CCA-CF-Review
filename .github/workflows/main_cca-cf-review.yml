name: CCA-CF Survey App Azure Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: |
            server/package-lock.json

      - name: Install Dependencies
        working-directory: ./server
        run: npm ci --production

      - name: Create Environment File
        run: |
          echo "PORT=8080" > .env
          echo "NODE_ENV=production" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET || 'default-jwt-secret-replace-in-production' }}" >> .env
          echo "ALLOWED_ORIGINS=*" >> .env
          echo "WEBSITE_NODE_DEFAULT_VERSION=18.x" >> .env

      - name: Setup Data Directory
        run: |
          mkdir -p server/data
          
          # Create default data JSON files if they don't exist
          for file in countries.json sessions.json admin-sessions.json surveys.json users.json; do
            if [ ! -f "server/data/$file" ]; then
              case "$file" in
                countries.json)
                  echo '{"countries":[{"id":"1","name":"Demo Country","password":"demo123"}]}' > "server/data/$file"
                  ;;
                sessions.json)
                  echo '{"sessions":[]}' > "server/data/$file"
                  ;;
                admin-sessions.json)
                  echo '{"sessions":[]}' > "server/data/$file"
                  ;;
                surveys.json)
                  echo '{"surveys":[]}' > "server/data/$file"
                  ;;
                users.json)
                  echo '{"users":[]}' > "server/data/$file"
                  ;;
              esac
            fi
          done

      - name: Create deployment package
        run: |
          mkdir -p deployment
          
          # Copy server files
          cp -r server deployment/
          
          # Copy client files
          cp -r client deployment/
          
          # Copy config files
          cp .env deployment/
          cp web.config deployment/
          
          # Create ZIP package
          cd deployment
          zip -r ../deployment.zip .

      - name: Deploy to Azure Web App
        id: deploy-to-azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'cca-cf-survey'
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_CREDENTIALS }}
          package: deployment.zip

      - name: Deployment Summary
        run: |
          echo "Deployed to: https://cca-cf-survey.azurewebsites.net"
          echo "Status: ${{ steps.deploy-to-azure.outcome }}"
